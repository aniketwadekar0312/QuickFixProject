services.jsx 

<div className="bg-gray-50 py-12">
        <div className="container mx-auto px-4">
          <h1 className="text-3xl font-bold mb-8 text-center">Our Services</h1>
          
          {/* Search and Filter */}
          <div className="bg-white p-6 rounded-lg shadow-md mb-8">
            <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
              <div className="col-span-1 md:col-span-2">
                <div className="relative">
                  <Search className="absolute left-3 top-3 h-4 w-4 text-gray-400" />
                  <Input
                    placeholder="Search services..."
                    value={searchTerm}
                    onChange={(e) => setSearchTerm(e.target.value)}
                    className="pl-10"
                  />
                </div>
              </div>
              <div>
                <Select value={selectedCategory} onValueChange={setSelectedCategory}>
                  <SelectTrigger>
                    <SelectValue placeholder="All Categories" />
                  </SelectTrigger>
                  <SelectContent>
                    <SelectItem value="">All Categories</SelectItem>
                    {serviceCategories.map((category, index) => (
                      <SelectItem key={index} value={category}>
                        {category}
                      </SelectItem>
                    ))}
                  </SelectContent>
                </Select>
              </div>
            </div>
          </div>
          
          {/* Services Grid */}
          <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-8">
            {filteredServices.map((service) => (
              <Card key={service.id} className="overflow-hidden hover:shadow-lg transition-shadow">
                <div className="h-48">
                  <img
                    src={service.imageUrl}
                    alt={service.name}
                    className="w-full h-full object-cover"
                  />
                </div>
                <CardContent className="p-6">
                  <div className="mb-2">
                    <span className="inline-block bg-brand-100 text-brand-800 text-xs px-2 py-1 rounded">
                      {service.category}
                    </span>
                  </div>
                  <h3 className="text-xl font-semibold mb-2">{service.name}</h3>
                  <p className="text-gray-600">{service.description}</p>
                </CardContent>
                <CardFooter className="p-6 pt-0">
                  <Button className="w-full">Book Now</Button>
                </CardFooter>
              </Card>
            ))}
          </div>
          
          {filteredServices.length === 0 && (
            <div className="text-center py-12">
              <h3 className="text-xl font-semibold mb-2">No services found</h3>
              <p className="text-gray-600">Try adjusting your search or filter criteria.</p>
            </div>
          )}
        </div>
      </div>


      <div className="space-y-6 border border-gray-200 rounded-md p-4 mt-6">
            <h3 className="font-medium text-lg">Professional Details</h3>
            
            <div>
              <FormLabel>Services Offered & Pricing</FormLabel>
              <div className="mt-2">
                {services.map((service) => (
                  <div key={service._id} className="flex items-center space-x-2 mb-3 pb-2 border-b border-gray-100">
                    <div className="flex items-center space-x-2 flex-1">
                      <input
                        type="checkbox" 
                        id={`service-${service._id}`}
                        className="rounded border-gray-300 text-brand-600 focus:ring-brand-500"
                        onChange={(e) => handleServiceChange(service.name, e.target.checked)}
                      />
                      <label htmlFor={`service-${service._id}`} className="text-sm">
                        {service.name}
                      </label>
                    </div>
                    
                    {form.watch("services")?.includes(service.name) && (
                      <div className="flex items-center">
                        <span className="text-gray-500 mr-2">â‚¹</span>
                        <Input
                          type="number"
                          min="0"
                          className="w-24 h-8 text-sm"
                          placeholder="Price"
                          value={servicePrices[service.name] || 0}
                          onChange={(e) => handlePriceChange(service.name, parseInt(e.target.value) || 0)}
                        />
                      </div>
                    )}
                  </div>
                ))}
              </div>
              {form.formState.errors.services && (
                <p className="text-sm font-medium text-destructive mt-2">
                  {form.formState.errors.services.message}
                </p>
              )}
            </div>
            
            <div>
              <FormLabel>Specializations</FormLabel>
              <div className="flex items-center space-x-2 mt-2">
                <Input
                  placeholder="Add a specialization"
                  value={specialization}
                  onChange={(e) => setSpecialization(e.target.value)}
                  className="flex-1"
                />
                <Button 
                  type="button" 
                  variant="outline"
                  onClick={handleAddSpecialization}
                >
                  <Plus className="h-4 w-4" />
                </Button>
              </div>
              
              <div className="flex flex-wrap gap-2 mt-3">
                {form.watch("specializations")?.map((item,index) => (
                  <div 
                    key={index} 
                    className="bg-gray-100 rounded-full px-3 py-1 text-sm flex items-center"
                  >
                    {item}
                    <button 
                      type="button" 
                      onClick={() => handleRemoveSpecialization(item)}
                      className="ml-2 text-gray-500 hover:text-gray-700"
                    >
                      <X className="h-3 w-3" />
                    </button>
                  </div>
                ))}
              </div>
              
              {form.formState.errors.specializations && (
                <p className="text-sm font-medium text-destructive mt-2">
                  {form.formState.errors.specializations.message}
                </p>
              )}
            </div>
            
            <FormField
              control={form.control}
              name="available"
              render={({ field }) => (
                <FormItem className="flex flex-row items-center justify-between rounded-lg border p-3">
                  <div className="space-y-0.5">
                    <FormLabel>Available for Work</FormLabel>
                    <FormDescription>
                      Customers can book your services immediately.
                    </FormDescription>
                  </div>
                  <FormControl>
                    <Switch
                      checked={field.value}
                      onCheckedChange={field.onChange}
                    />
                  </FormControl>
                </FormItem>
              )}
            />
            
            <div>
              <FormLabel>Identity Verification</FormLabel>
              <FormDescription className="mt-1">
                These document links are required for verification and will be reviewed by our team.
              </FormDescription>
              
              <div className="space-y-4 mt-3">
                <FormField
                  control={form.control}
                  name="aadhaarLink"
                  render={({ field }) => (
                    <FormItem>
                      <FormLabel>Aadhaar Card Link</FormLabel>
                      <FormControl>
                        <Input placeholder="Enter URL for your Aadhaar card" {...field} />
                      </FormControl>
                      <FormDescription>
                        Enter a cloud storage link where your Aadhaar card is stored.
                      </FormDescription>
                      <FormMessage />
                    </FormItem>
                  )}
                />
                
                <FormField
                  control={form.control}
                  name="photoUrl"
                  render={({ field }) => (
                    <FormItem>
                      <FormLabel>Profile Photo Link</FormLabel>
                      <FormControl>
                        <Input placeholder="Enter URL for your profile photo" {...field} />
                      </FormControl>
                      <FormDescription>
                        Enter a cloud storage link where your profile photo is stored.
                      </FormDescription>
                      <FormMessage />
                    </FormItem>
                  )}
                />
                
                <div>
                  <FormLabel>Work Samples Links</FormLabel>
                  <div className="flex items-center space-x-2 mt-2">
                    <Input
                      placeholder="Add a work sample link"
                      value={workSampleLink}
                      onChange={(e) => setWorkSampleLink(e.target.value)}
                      className="flex-1"
                    />
                    <Button 
                      type="button" 
                      variant="outline"
                      onClick={handleAddWorkSample}
                    >
                      <Plus className="h-4 w-4" />
                    </Button>
                  </div>
                  
                  <div className="flex flex-col gap-2 mt-3">
                    {form.watch("workSamplesLinks")?.map((link,index) => (
                      <div 
                        key={index} 
                        className="bg-gray-100 rounded-md px-3 py-2 text-sm flex items-center justify-between"
                      >
                        <span className="truncate flex-1">{link}</span>
                        <button 
                          type="button" 
                          onClick={() => handleRemoveWorkSample(link)}
                          className="ml-2 text-gray-500 hover:text-gray-700"
                        >
                          <X className="h-4 w-4" />
                        </button>
                      </div>
                    ))}
                  </div>
                  
                  {form.formState.errors.workSamplesLinks && (
                    <p className="text-sm font-medium text-destructive mt-2">
                      {form.formState.errors.workSamplesLinks.message}
                    </p>
                  )}
                </div>
              </div>
            </div>
          </div>
          
          <Button type="submit" className="w-full" disabled={loading}>
            {loading ? "Registering..." : "Register as Service Provider"}
          </Button>